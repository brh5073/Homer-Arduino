#include <Wire.h>
#include <Adafruit_PWMServoDriver.h>
#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <SPI.h>

Adafruit_PWMServoDriver srituhobby = Adafruit_PWMServoDriver();

#define TFT_CS   16
#define TFT_RST  15
#define TFT_DC   14
#define TFT_SDA  17
#define TFT_SCLK 0

Adafruit_ST7735 tft = Adafruit_ST7735(TFT_CS, TFT_DC, TFT_SDA, TFT_SCLK, TFT_RST);

#define servoMIN 150
#define servoMAX 600

const int numServos = 6; 
const int buttonPins[numServos] = {2, 3, 4, 5, 6, 7};
const int ledPins[numServos] = {8, 9, 10, 11, 12, 13}; 
const int relayPin = 18;  // Define relay control pin

bool buttonState[numServos]; 
bool lastButtonState[numServos]; 
int activeServo = -1;

void setup() {
  Serial.begin(9600);

  tft.initR(INITR_BLACKTAB);
  tft.fillScreen(ST77XX_BLACK);
  tft.setRotation(2);
  tft.setTextColor(ST77XX_GREEN);
  tft.setTextSize(2);
  tft.setCursor(10, 22);
  tft.print("hello");
  
  Wire.begin();
  srituhobby.begin();
  srituhobby.setPWMFreq(60);

  for (int i = 0; i < numServos; i++) {
    pinMode(buttonPins[i], INPUT);
    pinMode(ledPins[i], OUTPUT);
    digitalWrite(ledPins[i], LOW);
    buttonState[i] = false;
    lastButtonState[i] = false;
  }

  pinMode(relayPin, OUTPUT);
  digitalWrite(relayPin, LOW);  // Ensure relay is OFF initially
}

void moveServo(int servo, int angle) {
  int pulse = map(angle, 0, 180, servoMIN, servoMAX);
  srituhobby.setPWM(servo, 0, pulse);
}

void loop() {
  const char* toolNames[] = {"Saw", "Router", "Vacuum", "Drill", "Tool5", "Tool6"};
  
  for (int i = 0; i < numServos; i++) {
    buttonState[i] = digitalRead(buttonPins[i]);

    if (buttonState[i] == LOW && lastButtonState[i] == HIGH) {
      activeServo = i;
      moveServo(activeServo, 0); 
      digitalWrite(ledPins[activeServo], HIGH);

      tft.fillScreen(ST77XX_BLACK);
      tft.setCursor(10, 22);
      tft.setTextColor(ST77XX_GREEN);
      tft.setTextSize(2);
      tft.print(toolNames[i]);

      for (int j = 0; j < numServos; j++) {
        if (j != activeServo) {
          moveServo(j, 110); 
          digitalWrite(ledPins[j], LOW);
        }
      }

      // Relay control logic
      if (i == 2 || i == 3) {  // Buttons 3 (index 2) and 4 (index 3)
        digitalWrite(relayPin, HIGH);  // Turn relay ON
      } 
      else if (i == 0 || i == 1) {  // Buttons 1 (index 0) and 2 (index 1)
        digitalWrite(relayPin, LOW);  // Turn relay OFF
      }

      delay(15);
    }
    lastButtonState[i] = buttonState[i];
  }
}
